---
import { ChevronRight } from 'lucide-react';

interface BreadcrumbItem {
  label: string;
  href: string;
}

interface Props {
  items: BreadcrumbItem[];
  className?: string;
}

const { items, className = '' } = Astro.props;
const siteUrl = Astro.site || new URL('/', Astro.url.origin);

const itemListElements = [
  {
    '@type': 'ListItem',
    position: 1,
    name: 'Home',
    item: siteUrl.toString(),
  },
  ...items.map((item, index) => ({
    '@type': 'ListItem',
    position: index + 2,
    name: item.label,
    item: new URL(item.href, Astro.url.origin).toString(),
  })),
];

const schema = {

  '@context': 'https://schema.org',
  
      '@type': 'BreadcrumbList',
      '@id': '#bcblist',
      itemListElement: itemListElements,
}
---

<nav aria-label="Breadcrumb" class={`flex items-center space-x-1 text-sm ${className}`}>
  <script type="application/ld+json" set:html={JSON.stringify(schema)} />
  <div class="flex items-center">
    <a href={siteUrl} class="text-muted-foreground hover:text-foreground">Home</a>
  </div>
  {items.map((item, index) => (
    <>
      <ChevronRight className="h-4 w-4 text-muted-foreground" />
      <div class={`flex items-center ${index === items.length - 1 ? 'hidden sm:flex' : ''}`}>
        <a
          href={item.href}
          class={`${
            index === items.length - 1
              ? 'text-foreground font-medium'
              : 'text-muted-foreground hover:text-foreground'
          }`}
          aria-current={index === items.length - 1 ? 'page' : undefined}
        >
          {item.label}
        </a>
      </div>
    </>
  ))}
</nav>

