---
import { getCollection } from 'astro:content';
import type { GetStaticPaths } from 'astro';
import Layout from '@/layouts/Layout.astro';
import Sidebar from '@/components/blog/Sidebar.astro';
import { Image } from 'astro:assets';

export const getStaticPaths = (async ({ paginate }) => {
  // 1. Fetch and sort all posts
  const allPosts = await getCollection('blog');
  const sortedPosts = allPosts.sort((a, b) =>
    new Date(b.data.modDate).getTime() - new Date(a.data.modDate).getTime()
  );

  // 2. Paginate with 6 items per page
  return paginate(sortedPosts, { pageSize: 6 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
// `page.data` is your posts array for this page
const posts = page.data;
// current page number
const currentPage = page.currentPage;
// total pages (alias `lastPage` in some docs)
const totalPages = page.total ?? page.lastPage;
// indices for “Showing X–Y of Z”
const pageStart = page.start;
const pageEnd = page.end;
// total number of posts
const totalPosts = page.total;
---
<Layout title={`Blog – Page ${currentPage}`} description="Latest posts from us to you.">
  <main class="container mx-auto px-4 py-8">
    <div class="flex flex-col lg:flex-row gap-8">
      <!-- Main Content -->
      <div class="w-full lg:w-3/4">
        <h1 class="text-4xl font-bold mb-6">Latest Articles</h1>

        <!-- Posts Grid -->
        <section class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {posts.map((post) => (
            <article class="bg-white shadow-md rounded-lg overflow-hidden hover:scale-[1.02] transition">
              {post.data.image && (
                <div class="aspect-video overflow-hidden">
                  <Image
                    src={post.data.image}
                    width={post.data.image.width}
                    height={post.data.image.height}
                    format="webp"
                    loading="eager"
                    alt={post.data.title}
                    class="w-full h-full object-cover"
                  />
                </div>
              )}
              <div class="p-4">
                <h2 class="text-xl font-semibold mb-2 line-clamp-2">
                  {post.data.title}
                </h2>
                <time class="text-sm text-gray-600 mb-2 block">
                  {new Date(post.data.modDate).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                  })}
                </time>
                <p class="text-gray-600 mb-4 line-clamp-3">
                  {post.data.description}
                </p>
                <a
                  href={`/blog/${post.id}/`}
                  class="inline-flex items-center bg-gray-800/70 text-blue-100 px-3 py-1 rounded-full hover:bg-gray-900"
                >
                  Read more
                  <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M9 5l7 7-7 7" />
                  </svg>
                </a>
              </div>
            </article>
          ))}
        </section>

        <!-- Summary -->
        <p class="mt-4 text-gray-600">
          Showing {pageStart + 1} to {Math.min(pageEnd, totalPosts)} of {totalPosts} posts
        </p>

        <!-- Pagination Controls -->
        {totalPages > 1 && (
          <nav class="flex justify-center mt-12" aria-label="Pagination">
            <ul class="flex items-center gap-2">
              <!-- Previous -->
              <li>
                <a
                  href={currentPage > 1 ? `/blog/${currentPage - 1}/` : undefined}
                  class={`px-4 py-2 rounded-md text-sm font-medium ${
                    currentPage === 1
                      ? 'bg-gray-100 text-gray-400 cursor-not-allowed'
                      : 'bg-white text-gray-700 hover:bg-gray-50'
                  }`}
                  aria-disabled={currentPage === 1}
                >
                  Previous
                </a>
              </li>
              {/* Numbered pages */}
              {Array.from({ length: totalPages }, (_, i) => i + 1).map((num) => (
                <li >
                  <a
                    href={`/blog/${num}/`}
                    class={`px-4 py-2 rounded-md text-sm font-medium ${
                      num === currentPage
                        ? 'bg-blue-500 text-white'
                        : 'bg-white text-gray-700 hover:bg-gray-50'
                    }`}
                    aria-current={num === currentPage ? 'page' : undefined}
                  >
                    {num}
                  </a>
                </li>
              ))}
              <!-- Next -->
              <li>
                <a
                  href={currentPage < totalPages ? `/blog/${currentPage + 1}/` : undefined}
                  class={`px-4 py-2 rounded-md text-sm font-medium ${
                    currentPage === totalPages
                      ? 'bg-gray-100 text-gray-400 cursor-not-allowed'
                      : 'bg-white text-gray-700 hover:bg-gray-50'
                  }`}
                  aria-disabled={currentPage === totalPages}
                >
                  Next
                </a>
              </li>
            </ul>
          </nav>
        )}
      </div>

      <!-- Sidebar -->
      <aside class="w-full lg:w-1/4">
        {/*<Sidebar />*/}
      </aside>
    </div>
  </main>
</Layout>
